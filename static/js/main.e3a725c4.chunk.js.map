{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","j","this","squares","gameBoard","matrix","length","row","items","push","renderSquare","React","Component","Game","state","isLoaded","error","createdTime","finishedTime","status","fieldBoard","history","Array","fill","stepNumber","fetch","then","res","json","result","setState","created_time","field_board","game_board","slice","console","log","step","xIsNext","resultMessage","handleClick","ReactDOM","render","document","getElementById"],"mappings":"+NAMA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,2KACSC,EAAGC,GAAI,IAAD,OACjB,OACE,cAACP,EAAD,CACEI,MAAOI,KAAKP,MAAMQ,QAAQH,GAAGC,GAC7BJ,QAAS,kBAAM,EAAKF,MAAME,QAAQG,EAAEC,Q,+BASxC,IAHA,IAAMG,EAAYF,KAAKP,MAAMQ,QACvBE,EAAS,GAENL,EAAI,EAAGA,EAAII,EAAUE,OAAQN,IAAK,CAIzC,IAHA,IAAMO,EAAMH,EAAUJ,GAChBQ,EAAQ,GAELP,EAAI,EAAGA,EAAIM,EAAID,OAAQL,IAC9BO,EAAMC,KAAKP,KAAKQ,aAAaV,EAAEC,IAGjCI,EAAOI,KAAK,qBAAKb,UAAU,YAAf,SAA4BY,KAE1C,OACE,8BACGH,Q,GA1BWM,IAAMC,WAgCpBC,E,kDACJ,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXC,UAAU,EACVC,MAAO,KACPC,YAAa,KACbC,aAAc,KACdC,OAAQ,KACRC,WAAY,GACZhB,UAAW,GACXiB,QAAS,CAAC,CACRlB,QAASmB,MAAM,GAAGC,KAAK,QAEzBC,WAAY,GAbG,E,gEAiBE,IAAD,OAClBC,MAAM,qFACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZf,UAAU,EACVE,YAAaY,EAAOE,aACpBZ,OAAOU,EAAOV,OACdC,WAAYS,EAAOG,YACnB5B,UAAWyB,EAAOI,gBAMtB,SAACjB,GACC,EAAKc,SAAS,CACZf,UAAU,EACVC,e,kCAMEhB,EAAEC,GACZ,IAAMG,EAAYF,KAAKY,MAAMV,UACvBe,EAqDD,UApDChB,EAAUC,EAAU8B,QAE1BC,QAAQC,IAAIjB,GAIZgB,QAAQC,IAAI,QACZjC,EAAQH,GAAGC,GAAK,IAChBkC,QAAQC,IAAIjC,GACZD,KAAK4B,SAAS,CACZ1B,UAAWD,M,6BAIRkC,GAELnC,KAAK4B,SAAS,CACZN,WAAYa,EACZC,QAAUD,EAAO,IAAO,M,+BAIlB,IAIJE,EAJG,OACWrC,KAAKY,MAAMV,UAY7B,OAPEmC,EAAgB,uBAQhB,sBAAK3C,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEI,QAASD,KAAKY,MAAMV,UACpBP,QAAS,SAACG,EAAEC,GAAH,OAAS,EAAKuC,YAAYxC,EAAEC,QAGzC,qBAAKL,UAAU,YAAf,SACE,8BAAM2C,a,GA1FG5B,IAAMC,WAwGzB6B,IAASC,OACP,cAAC7B,EAAD,IACA8B,SAASC,eAAe,W","file":"static/js/main.e3a725c4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// squares is a matrix\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i, j) {\n    return (\n      <Square\n        value={this.props.squares[i][j]}\n        onClick={() => this.props.onClick(i,j)}\n      />\n    );\n  }\n\n  render() {\n    const gameBoard = this.props.squares;\n    const matrix = [];\n\n    for (let i = 0; i < gameBoard.length; i++) {\n      const row = gameBoard[i];\n      const items = [];\n      \n      for (let j = 0; j < row.length; j++) {\n        items.push(this.renderSquare(i,j))\n      };\n      \n      matrix.push(<div className=\"board-row\">{items}</div>);\n    };\n    return (\n      <div>\n        {matrix}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: null,\n      createdTime: null,\n      finishedTime: null,\n      status: null,\n      fieldBoard: [],\n      gameBoard: [],\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n    };\n  }\n  \n  componentDidMount() {\n    fetch(\"https://minesweeperdemo.herokuapp.com/games/d54540c9-604f-4429-9ead-a0c90eb5cf8c/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            createdTime: result.created_time,\n            status:result.status,\n            fieldBoard: result.field_board,\n            gameBoard: result.game_board,\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleClick(i,j) {\n    const gameBoard = this.state.gameBoard;\n    const status = calculateStatus(gameBoard);\n    const squares = gameBoard.slice();\n    \n    console.log(status);\n    if (status != 'started') {\n      return;\n    }\n    console.log('pass');\n    squares[i][j] = 'y';\n    console.log(squares);\n    this.setState({\n      gameBoard: squares,\n    });\n  }\n\n  jumpTo(step) {\n    // Not used\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const gameBoard = this.state.gameBoard;\n    const status = calculateStatus(gameBoard);\n\n    let resultMessage;\n    if (status == 'started') {\n      resultMessage = 'You are doing great!';\n    } else if (status == 'won') {\n      resultMessage = 'You won!!';\n    } else {\n      resultMessage = 'You lost! :(';\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={this.state.gameBoard}\n            onClick={(i,j) => this.handleClick(i,j)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{resultMessage}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateStatus(squares) {\n  return 'started';\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n  "],"sourceRoot":""}